version: 2.1
orbs:
  node: circleci/node@4.1.0
executors:
    docker-publisher:
        docker:
            - image: circleci/buildpack-deps:stretch
jobs:
  test-server:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          app-dir: ~/project/server
          pkg-manager: yarn
          cache-path: ~/project/server/node_modules
          cache-version: v2
      - run: mkdir ~/junit
      - run:
          name: Run Unit Tests
          command: yarn test
          working_directory: ~/project/server
          environment:
            MOCHA_FILE: junit/test-results.xml
          when: always
      - store_test_results:
          path: ~/project/server/junit
      - store_artifacts:
          path: ~/project/server/junit
  build:
      executor: docker-publisher
      steps:
          - checkout
          - setup_remote_docker
          - run:
              name: Build Docker Image
              command: docker build -t $IMAGE_NAME:latest .
          - run:
              name: Archive Docker image
              command: docker save -o image.tar $IMAGE_NAME
          - persist_to_workspace:
                root: .
                paths:
                    - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
        - attach_workspace:
            at: /tmp/workspace
        - setup_remote_docker:
            docker_layer_caching: true
        - run:
            name: Load archived Docker image
            command: docker load -i /tmp/workspace/image.tar
        - run:
            name: Publish Docker Image to Docker Hub
            command: |
              echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
              IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
              docker tag $IMAGE_NAME:latest $IMAGE_NAME:$IMAGE_TAG
              docker push $IMAGE_NAME:latest
              docker push $IMAGE_NAME:$IMAGE_TAG
  deploy:
    docker:
        - image: ${IMAGE_NAME}:latest
          auth:
            username: $DOCKERHUB_USERNAME
            password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
workflows:
  node-tests:
    jobs:
      - test-server
      - build:
          requires:
            - "test-server"
      - publish-latest:
          requires:
            - "build"
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - "publish-latest"
